{"posts": [{"title": "\u9650\u5b9a\u7b49\u957f\u7cfb\u6570\u7684\u8ba1\u7b97\u65b9\u6cd5", "date": "2021-12-27T00:50:00-00.00", "path": "/archives/ric/", "text": "\u95ee\u9898\u8bbe\u5b9a\n\u5bf9\u4e8e\u538b\u7f29\u611f\u77e5\u95ee\u9898\uff1a\n$$\n\\boldsymbol{y}=\\boldsymbol{A}\\boldsymbol{x}\n$$\n$\\boldsymbol{A}\\in\\mathbb{R}^{M\\times N}$\u662f\u89c2\u6d4b\u77e9\u9635$\\boldsymbol{x}$\u662f$S$-\u7a00\u758f\u5411\u91cf\uff0c\u5373\u5176\u4ec5\u6709$S$\u4e2a\u5143\u7d20\u4e0d\u4e3a\u96f6$\\boldsymbol{y}$\u662f\u7ecf\u8fc7\u538b\u7f29\u7684\u4fe1\u53f7\u9650\u5b9a\u7b49\u957f\u7cfb\u6570\u7684\u5b9a\u4e49\n\u524d\u63d0\uff1a\u5c06\u89c2\u6d4b\u77e9\u9635$A\\in\\mathbb{R}^{M\\times N}$,\u8f6c\u5316\u4e3a\u6ee1\u8db3$(A^\\text{T}A)_{ii}=1,(i\\in {1,...,N})$\u7684\u5f62\u5f0f\uff0c\u5373\u6b63\u89c4\u5316\u89c2\u6d4b\u77e9\u9635\uff0c\u4f7f\u5176\u6bcf\u5217\u7684\u80fd\u91cf\u4e3a$1$\u3002\n\u5b9a\u4e49-\u9650\u5236\u7b49\u957f\u7cfb\u65701\uff1a\u5bf9\u4e8e\u6240\u6709\u7684$S$-\u7a00\u758f\u5411\u91cf$\\boldsymbol{x}$\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u5173\u7cfb\n$$\n(1-\\delta_S^\\text{min})\\lVert\\boldsymbol{x}\\lVert_F^2\\leq\\lVert\\bold{A}\\boldsymbol{x}\\lVert_F^2\\leq(1+\\delta_S^\\text{max})\\lVert\\boldsymbol{x}\\lVert_F^2\n$$\n\u7684\u77e9\u9635$\\boldsymbol{A}\\in\\mathbb{R}^{M\\times N}$\u88ab\u79f0\u4e3a\u6ee1\u8db3\u9650\u5236\u7b49\u957f\u6027\uff08restricted isometry property, RIP\uff09\n\u5176\u4e2d$0&lt;\\delta_S^\\text{min}&lt;\\delta_S^\\text{max}$\u88ab\u79f0\u4e3a\u9650\u5236\u7b49\u957f\u7cfb\u6570\uff08restricted isometry constants, RIC\uff09\u3002\n\u9650\u5b9a\u7b49\u957f\u7cfb\u6570$\\delta_S$\u7684\u57fa\u672c\u8ba1\u7b97\u65b9\u6cd5\n\u9650\u5b9a\u7b49\u957f\u7cfb\u6570$\\delta_S$\u7684\u8ba1\u7b97\u5f0f2\uff1a$$\n\\delta_S=\\text{max}\\{1-\\text{min}_{T:T\\subseteq V,\\vert T\\vert=S}\\lambda_\\text{min}(A_T^TA_T),\\text{max}_{T:T\\subseteq V,\\vert T\\vert=S}\\lambda_\\text{max}(A_T^TA_T)\\}\n$$\n\u9650\u5b9a\u7b49\u957f\u7cfb\u6570$\\delta_S$\u57fa\u672c\u8ba1\u7b97\u7684Python\u5b9e\u73b0\nimport numpy as np\nimport time\nfrom scipy.special import comb\nimport itertools\n\ndef print_time(time_cost, comb_num=None):\n    &quot;&quot;&quot;\n    function for formart and print the time cost\n    &quot;&quot;&quot;\n    c_t = []\n    if time_cost &lt; 0.1:\n        c_t.append(str(time_cost * 1000))\n        c_t.append(&quot;ms&quot;)\n    elif time_cost &lt; 60:\n        c_t.append(str(time_cost))\n        c_t.append(&quot;s&quot;)\n    elif time_cost &lt; 3600:\n        c_t.append(str(time_cost / 60))\n        c_t.append(&quot;m&quot;)\n    else:\n        c_t.append(str(time_cost / 3600))\n        c_t.append(&quot;h&quot;)\n    print(&quot;Finished! It cost&quot;, c_t)\n    if comb_num:\n        print(&quot;{:.2f} ms, 1000 process&quot;.format(1000 * time_cost / comb_num))\n\ndef paper_do_RIC(t_matrix, k, n=100, print_flag=True, msg=&#39;&#39;):\n    &quot;&quot;&quot;\n    function to get RIC for sensing matrix\n\n    t_matrix: (A) sensing matrix (Notice: here y=xA, i.e., shape(t_matrix)=[N,M]\n\n    k: (S) parameter for sparse\n\n    n: (N) dimention of sparse vector\n\n    print_flag: print info when runing or not\n\n    msg: add more message in print\n\n    &quot;&quot;&quot;\n    start_time = time.time()\n    coms = itertools.combinations(range(n), k)\n    if print_flag:\n        comb_num = comb(n, k, exact=True)\n        print(&quot;There are &quot; + str(comb_num) + &quot; combinations&quot;)\n        print(&quot;Please, wait&quot;)\n    max_value = 0\n    for com in coms:\n        com = t_matrix[com, :]\n        eigs = np.linalg.eig(np.matmul(com, com.transpose()))[0]\n        max_value = max(1 - min(eigs), max(eigs) - 1, max_value)\n    if print_flag:\n        print(msg)\n        print(max_value)\n        stop_time = time.time()\n        time_cost = stop_time - start_time\n        print_time(time_cost, comb_num)\n    return max_value\n\n\n\nA. Sakata, &quot;\u30ec\u30d7\u30ea\u30ab\u6cd5\u306b\u3088\u308b\u5236\u9650\u7b49\u9577\u5b9a\u6570\u306e\u8a55\u4fa1,&quot; SITA2015, (2015)&#8617;\nA. Sakata, &quot;\u5236\u9650\u7b49\u9577\u5b9a\u6570\u8a55\u4fa1\u306b\u304a\u3051\u308b RSB \u8ee2\u79fb,&quot; JSP2015, (2015)&#8617;\n\n\n", "categories": [{"name": "\u538b\u7f29\u611f\u77e5", "slug": "\u538b\u7f29\u611f\u77e5", "permalink": "/category/%E5%8E%8B%E7%BC%A9%E6%84%9F%E7%9F%A5/"}], "tags": [{"name": "\u538b\u7f29\u611f\u77e5", "slug": "\u538b\u7f29\u611f\u77e5", "permalink": "/tag/%E5%8E%8B%E7%BC%A9%E6%84%9F%E7%9F%A5/"}, {"name": "\u9650\u5b9a\u7b49\u957f\u7cfb\u6570", "slug": "\u9650\u5b9a\u7b49\u957f\u7cfb\u6570", "permalink": "/tag/%E9%99%90%E5%AE%9A%E7%AD%89%E9%95%BF%E7%B3%BB%E6%95%B0/"}, {"name": "\u7b7e\u540d\u7801", "slug": "\u7b7e\u540d\u7801", "permalink": "/tag/%E7%AD%BE%E5%90%8D%E7%A0%81/"}]}, {"title": "\u6211\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0", "date": "2021-12-13T16:30:00-00.00", "path": "/archives/my-first-post/", "text": "\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0\u3002\u6587\u7ae0\u4f7f\u7528 GitHub \u7ba1\u7406\uff0c\u5e76\u901a\u8fc7 GitHub Actions \u81ea\u52a8\u6784\u5efa\u4e0e\u53d1\u5e03\uff01\u8fd9\u4e2a\u7ad9\u70b9\u4e3b\u8981\u7528\u6765post\u4e00\u4e9b\u81ea\u5df1\u7684\u7814\u7a76\u65b9\u9762\u7684\u603b\u7ed3\uff0c\u4ee5\u53ca\u4e00\u4e9b\u597d\u73a9\u7684\u6280\u672f\u5206\u4eab\u3002\u5148\u7acb\u4e00\u4e2aFlag\u4e3a\u656c\uff0c\u6bcf\u5468\u81f3\u5c11\u4e00\u66f4\uff01", "categories": [{"name": "\u65f6\u95f4\u7ebf", "slug": "\u65f6\u95f4\u7ebf", "permalink": "/category/%E6%97%B6%E9%97%B4%E7%BA%BF/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/tag/%E5%8D%9A%E5%AE%A2/"}, {"name": "GitHub", "slug": "GitHub", "permalink": "/tag/GitHub/"}]}], "pages": [{"title": "\u5173\u4e8e", "date": "2021-12-10T23:30:00-00.00", "path": "/about/", "text": "\u8fd9\u91cc\u662f\u6211\u7684\u4e2a\u4eba\u6280\u672f\u535a\u5ba2\uff0c\u901a\u8fc7 GitHub \u7ba1\u7406\u4e0e\u6784\u5efa\u3002Contact\nEmail: lantian.wei.it#gmail.com (replace # with @)", "categories": [], "tags": []}]}